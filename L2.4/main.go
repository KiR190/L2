/*

Программа сначала напечатает числа от 0 до 9, затем завершится паникой (fatal error: all goroutines are asleep - deadlock!)
Ошибка происходит потому, что канал не имеет буфера и после отправки всех значений не происходит закрытия канала,
это значит что каждая операция отправки будет блокироваться до тех пор, пока значение не будет прочитано из канала.

Цикл чтения в главной goroutine никогда не завершится, так как канал не закрыт
Отправитель не может завершить работу и закрыть канал, так как главная goroutine не завершает чтение

Чтобы исправить проблему нужно закрыть канал после выполнения цикла:

go func() {
    for i := 0; i < 10; i++ {
        ch <- i
    }
    close(ch)  // Закрываем канал после цикла
}()

*/

package main

import (
	"fmt"
)

func main() {
	ch := make(chan int, 10)
	go func() {
		for i := 0; i < 10; i++ {
			ch <- i
		}
		close(ch) // Закрываем канал после цикла
	}()
	for n := range ch {
		fmt.Println(n)
	}
}
